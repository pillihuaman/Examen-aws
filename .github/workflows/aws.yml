# Nombre del workflow que aparecerá en la pestaña "Actions" de GitHub
name: Deploy SAM Application to AWS

# Define cuándo se ejecutará este workflow
on:
  push:
    branches:
      - main  # Se activa con cada push a la rama 'main'
      - master # También se activa con cada push a la rama 'master'

jobs:
  build-and-deploy:
    # El tipo de máquina virtual donde se ejecutará el trabajo
    runs-on: ubuntu-latest

    steps:
      # 1. Descarga tu código del repositorio a la máquina virtual
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configura el entorno de Java 17, necesario para compilar tu proyecto
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      # 3. Configura las credenciales de AWS de forma segura usando los secretos de GitHub
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 4. Instala la AWS SAM CLI, la herramienta para construir y desplegar
      - name: Install SAM CLI
        run: pip install aws-sam-cli

      # 5. Construye el proyecto SAM. Esto compila tu código Java con Maven.
      - name: Build SAM Application
        run: sam build


      - name: Deploy SAM Application
        run: |
          sam deploy \
            --stack-name examen-java-lambda-stack \
           --s3-bucket pipeline-artefactos-examen-614520203803 \
            --capabilities CAPABILITY_IAM \
            --region us-east-1 \
            --no-fail-on-empty-changeset \
            --resolve-s3